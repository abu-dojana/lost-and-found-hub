<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - LostandFound</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/LostandFound.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
</head>
<body style="background-image: url('@Url.Content("~/images/lf.jpg")'); background-size: cover;">

    <!-- Navbar -->
    <header>
        <nav class="navbar">
            <div class="logo">
                <img style="width:250px;" src="@Url.Content("~/images/lfl.png")" alt="Lost & Found Marketplace Logo">
            </div>
            <ul>
                <li><a style="color: #ffffff; text-decoration: none;" href="@Url.Action("Index", "Home")">Home</a></li>
                <li><a style="color: #ffffff; text-decoration: none;" href="@Url.Action("PostLostItem", "Item")">Post a Lost Item</a></li>
                <li><a style="color: #ffffff; text-decoration: none;" href="@Url.Action("PostFoundItem", "Item")">Post a Found Item</a></li>
                <li><a style="color: #ffffff; text-decoration: none;" href="@Url.Action("SeeLostListings", "Item")">See Lost Items</a></li>
                <li><a style="color: #ffffff; text-decoration: none;" href="@Url.Action("SeeFoundListings", "Item")">See Found Items</a></li>

                <!-- Notification Icon -->
                <li style="position: relative;">
                    <a style="color: #ffffff; text-decoration: none; position: relative;" href="@Url.Action("Index", "Notification")">
                        <i class="fas fa-bell" style="font-size: 24px;"></i>
                        <span id="notification-badge" class="badge badge-pill badge-danger"
                              style="position: absolute; top: -5px; right: -8px; font-size: 12px; display: none;">
                        </span>
                    </a>
                </li>

                @if (Context.Session.GetInt32("UserId") != null)
                {
                    <li><a href="@Url.Action("Logout", "Account")" class="login">LOG OUT</a></li>
                }
                else
                {
                    <li><a style="color: #ffffff; text-decoration: none;" href="/Account/Register">Register</a></li>
                    <li><a style="color: #ffffff; text-decoration: none;" href="/Account/Login">Login</a></li>
                }
            </ul>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- JavaScript for updating notification badge -->
    @if (Context.Session.GetInt32("UserId") != null)
    {
        <script>
            function updateNotificationCount() {
                fetch('@Url.Action("GetUnreadCount", "Notification")')
                    .then(response => response.json())
                    .then(data => {
                        const badge = document.getElementById('notification-badge');
                        if (data.count > 0) {
                            badge.textContent = data.count;
                            badge.style.display = 'inline-block';
                        } else {
                            badge.style.display = 'none';
                        }
                    })
                    .catch(error => console.error("Error fetching notification count:", error));
            }

            document.addEventListener('DOMContentLoaded', function() {
                updateNotificationCount();
                setInterval(updateNotificationCount, 60000); // Update every minute
            });
        </script>
    }

    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>
